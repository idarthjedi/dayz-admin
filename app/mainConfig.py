# Form implementation generated from reading ui file 'src/mainConfig.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QFileDialog, QWidget, QMessageBox, QMainWindow
import os
import json


class Ui_MainWindow(QMainWindow):

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(596, 500)
        self._parent = MainWindow
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.pushButton_addJSON = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_addJSON.setObjectName("pushButton_addJSON")
        self.gridLayout.addWidget(self.pushButton_addJSON, 4, 2, 1, 1)
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setObjectName("label")
        self.gridLayout.addWidget(self.label, 0, 0, 1, 1)
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setObjectName("label_2")
        self.gridLayout.addWidget(self.label_2, 2, 0, 1, 1)
        self.label_3 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_3.setObjectName("label_3")
        self.gridLayout.addWidget(self.label_3, 5, 0, 1, 1)
        self.lstJSONLocation = QtWidgets.QListWidget(parent=self.centralwidget)
        self.lstJSONLocation.setObjectName("lstJSONLocation")
        self.gridLayout.addWidget(self.lstJSONLocation, 3, 0, 1, 3)
        self.pushButton_ProfileLocation = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_ProfileLocation.setObjectName("pushButton_ProfileLocation")
        self.gridLayout.addWidget(self.pushButton_ProfileLocation, 1, 2, 1, 1, QtCore.Qt.AlignmentFlag.AlignTop)
        self.lstXMLLocation = QtWidgets.QListWidget(parent=self.centralwidget)
        self.lstXMLLocation.setObjectName("lstXMLLocation")
        self.gridLayout.addWidget(self.lstXMLLocation, 6, 0, 1, 3)
        self.pushButton_Close = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_Close.setObjectName("pushButton_Close")
        self.gridLayout.addWidget(self.pushButton_Close, 8, 0, 1, 3)
        self.pushButton_removeXML = QtWidgets.QPushButton(parent=self.centralwidget)
        self.pushButton_removeXML.setObjectName("pushButton_removeXML")
        self.gridLayout.addWidget(self.pushButton_removeXML, 7, 1, 1, 1)
        self.pushButton_addXML = QtWidgets.QPushButton(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_addXML.sizePolicy().hasHeightForWidth())
        self.pushButton_addXML.setSizePolicy(sizePolicy)
        self.pushButton_addXML.setObjectName("pushButton_addXML")
        self.gridLayout.addWidget(self.pushButton_addXML, 7, 2, 1, 1)
        self.pushButton_removeJSON = QtWidgets.QPushButton(parent=self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_removeJSON.sizePolicy().hasHeightForWidth())
        self.pushButton_removeJSON.setSizePolicy(sizePolicy)
        self.pushButton_removeJSON.setObjectName("pushButton_removeJSON")
        self.gridLayout.addWidget(self.pushButton_removeJSON, 4, 1, 1, 1)
        self.lnProfileLocation = QtWidgets.QLineEdit(parent=self.centralwidget)
        self.lnProfileLocation.setObjectName("lnProfileLocation")
        self.gridLayout.addWidget(self.lnProfileLocation, 1, 0, 1, 2)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 596, 24))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.pushButton_ProfileLocation.clicked['bool'].connect(self._getProfileLocation) # type: ignore
        self.pushButton_addJSON.clicked['bool'].connect(self._addJSONLocation) # type: ignore
        self.pushButton_removeJSON.clicked['bool'].connect(self._removeJSONLocation) # type: ignore
        self.pushButton_addXML.clicked['bool'].connect(self._addXMLLocation) # type: ignore
        self.pushButton_removeXML.clicked['bool'].connect(self._removeXMLLocation) # type: ignore
        self.pushButton_Close.clicked['bool'].connect(self._closeForm) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton_addJSON.setText(_translate("MainWindow", "+"))
        self.label.setText(_translate("MainWindow", "DayZ Profile Location"))
        self.label_2.setText(_translate("MainWindow", "DayZ JSON File Location(s)"))
        self.label_3.setText(_translate("MainWindow", "DayZ XML File Location(s)"))
        self.pushButton_ProfileLocation.setText(_translate("MainWindow", "..."))
        self.pushButton_Close.setText(_translate("MainWindow", "&Close"))
        self.pushButton_removeXML.setText(_translate("MainWindow", "-"))
        self.pushButton_addXML.setText(_translate("MainWindow", "+"))
        self.pushButton_removeJSON.setText(_translate("MainWindow", "-"))

        self.loadConfig()


    def getDirectory(self, title: str, start_dir: str):

        return QFileDialog.getExistingDirectory(self, caption=title,
                                                directory=start_dir)

    def _getProfileLocation(self, status: bool):
        fileName = self.getDirectory("Locate DayZ Profile Directory", self.lnProfileLocation.text())
        if fileName:
            self.lnProfileLocation.setText(fileName)
        else:
            self.lnProfileLocation.setText("")
        return

    def _addJSONLocation(self):
        fileName = self.getDirectory("Locate JSON Directory", self.lnProfileLocation.text())
        if fileName:
            self.lstJSONLocation.addItem(fileName)
        return

    def _removeJSONLocation(self):
        current_row = self.lstJSONLocation.currentRow()
        if not current_row:
            return

        current_item = self.lstJSONLocation.takeItem(current_row)
        del current_item
        return

    def _addXMLLocation(self):
        fileName = self.getDirectory("Locate XML Directory", self.lnProfileLocation.text())
        if fileName:
            self.lstXMLLocation.addItem(fileName)

        return

    def _removeXMLLocation(self):
        current_row = self.lstXMLLocation.currentRow()
        if not current_row:
            return

        current_item = self.lstXMLLocation.takeItem(current_row)
        del current_item

        return

    def _closeForm(self):
        # Save Configuration File Info
        if self.lnProfileLocation.text() == "":
            return

        self.saveConfig()
        self._parent.close()

        return

    def loadConfig(self):
        # Load config file if it exists
        if not os.path.exists("app-config.json"):
            with open("src/app-config.latest.json", "r") as src:
                with open("app-config.json", "w") as dest:
                    dest.write(src.read())

        if os.path.exists("app-config.json"):
            with open('app-config.json') as config_file:
                try:
                    config = json.load(config_file)
                    _profiles_directory = config["properties"]["dayz-profile-dir"]
                    _json_directory = config["properties"]["other_dirs"]["json"]
                    _xml_directory = config["properties"]["other_dirs"]["xml"]
                except json.JSONDecodeError as error:
                    raise "Cannot validate app-config.json"

            self.lnProfileLocation.setText(_profiles_directory)
            for path in _json_directory:
                self.lstJSONLocation.addItem(path)

            for path in _xml_directory:
                self.lstXMLLocation.addItem(path)

        return

    def saveConfig(self):

        data = {}
        data["config-version"] = "1.0"

        properties = {}
        properties["dayz-profile-dir"] = self.lnProfileLocation.text()

        other_dirs, json_dirs, xml_dirs = {}, {}, {}
        json_items, xml_items = [], []

        for index in range(self.lstJSONLocation.count()):
            json_items.append(str(self.lstJSONLocation.item(index).text()))

        for index in range(self.lstXMLLocation.count()):
            xml_items.append(str(self.lstXMLLocation.item(index).text()))

        other_dirs["json"] = json_items
        other_dirs["xml"] = xml_items
        properties["other_dirs"] = other_dirs
        data["properties"] = properties

        # print(json.dumps(data, indent=2))

        with open("app-config.json", mode="w") as config_file:
            config_file.write(json.dumps(data))

        return


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
